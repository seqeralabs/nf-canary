nextflow_pipeline{

    name "Test nf-canary"
    script "main.nf"

    test("Should run without failures") {

        when {
            params {
              remoteFile = "${baseDir}/tests/testfile.txt"
              outdir     = "${launchDir}/output"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.trace.tasks().size()     == 15 },
                { assert workflow.trace.succeeded().size() == 14 },
                { assert workflow.trace.failed().size()    == 1 },
                { assert snapshot(workflow, path(params.outdir).list()).match() }
            )
        }

    }

    test("Should skip a process") {

        when {
            params {
              skip       = "test_success"
              remoteFile = "${baseDir}/tests/testfile.txt"
              outdir     = "${launchDir}/output"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.trace.tasks().size()     == 14 },
                { assert workflow.trace.succeeded().size() == 13 },
                { assert workflow.trace.failed().size()    == 1 },
                { assert snapshot(workflow, path(params.outdir).list()).match() }
            )
        }

    }


    test("Should only run one process") {

        when {
            params {
              run        = "test_success"
              remoteFile = "${baseDir}/tests/testfile.txt"
              outdir     = "${launchDir}/output"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.trace.tasks().size()     == 1 },
                { assert workflow.trace.succeeded().size() == 1 },
                { assert workflow.trace.failed().size()    == 0 },
                { assert snapshot(workflow, path(params.outdir).list()).match() }
            )
        }

    }

    test("Should publish to alternative directory") {

        when {
            params {
              outdir     = "${launchDir}/output"
              remoteFile = "${baseDir}/tests/testfile.txt"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.trace.tasks().size()     == 15 },
                { assert workflow.trace.succeeded().size() == 14 },
                { assert workflow.trace.failed().size()    == 1 },
                { assert snapshot(workflow, path("${launchDir}/output").list()).match() }
            )
        }

    }

}
